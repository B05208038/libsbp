# Copyright (C) 2015 Swift Navigation Inc.
# Contact: Fergus Noble <fergus@swiftnav.com>
#
# This source is subject to the license found in the file 'LICENSE' which must
# be be distributed together with this source. All other rights reserved.
#
# THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
# EITHER EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.

package: swiftnav.sbp.system
description: Standardized system messages from Swift Navigation devices.
stable: True
public: True
include:
  - types.yaml
definitions:


 - MSG_METRICS_LIST_REQ:
    id: 0x0301
    short_desc: List the available metrics on the system
    desc: |
      This message ask the system to return a list of available
      metrics on the system.
    fields:
      - request_id:
          type: u16
          desc: a unique id for the request

 - MSG_METRICS_LIST_RESP:
  
    id: 0x0302
  
    short_desc: A metric that's available on the system.
    desc: |
      This message details a metric that can be enabled in order
      for a client to receive information reported by the metric.
  
    fields:
      - request_id:
          type: u16
          desc: the unique id of the original request
      - index:
          type: u16
          desc: |
            The index number of the metric, should be stable per firmware
            version, and should not change between invocations of the metrics
            daemon.  Doubles as the "id" that used when the metric is enabled.
      - max_index:
          type: u16
          desc: |
            The maximum number of metrics that are supported by the system.
            When metric_index == max_metrics_index (and all metrics have been
            received)
      - type:
          type: u8
          desc: |
            Bit field describing the type of the metric: where 0x1 = s32, 0x2 = s64,
            0x4 = u32, 0x01 = u64, 0x02 = f64, 0x04 = time (nanosecond).
      - interval:
          type: u16
          desc: |
            The interval at which the metric updates, in 10s of milliseconds. A value
            of 50 would mean the metric updates every 500 milliseconds. A value of
            30,000 would mean the metric updates every 5 minutes.
      - name:
          type: array
          fill: u8
          size: 240
          desc: The human readable name of the metric
 - MSG_METRICS_GET_INDEX_REQ:
  
    id: 0x0303
  
    short_desc: Request a specific metric by it's index.
    desc: |
      Allows the system to re-request a metric if it's lost
      because of a link communication error.
  
    fields:
      - request_id:
          type: u16
          desc: the unique id of the original request
      - index:
          type: u16
          desc: |
            The index number of the metric that is being requested.
 - MSG_METRICS_INTERVAL_REQ:
    id: 0x0304
    short_desc: Sets the reporting interval
    desc: |
      Tells metrics daemon to begin reporting at the specified interval.
      It should be possible to align the specified interval to a second
      boundary.
    fields:
      - request_id:
          type: u16
          desc: the request id that was completed
      - reporting_interval:
          type: u16
          desc: |
            The interval at which the metrics should be reported, specified
            in 10s of milliseconds. A value of 50 would mean the metric reports
            every 500 milliseconds. A value of 30,000 would mean the reports
            every 5 minutes.
 
            The special value of 0 will disable metrics reporting, but leave
            the daemon running.    
 - MSG_METRICS_INTERVAL_RESP:
    id: 0x0305
    short_desc: Indicates that metrics reporting has begun
    fields:
      - request_id:
          type: u16
          desc: the request id that was completed
      - result:
          type: u8
          desc: |
            A value of zero means success, a non-zero value means an error
            occurred.
      - message:
          type: array
          fill: u8
          size: 240
          desc: |
            A message describing the reason for a failure, or nothing if the
            request was sucessful.  
 - MSG_METRICS_DIVISOR_REQ:
    id: 0x0306
    short_desc: Sets the divisor for the specified metrics.
    desc: |
      Upon receipt the metrics daemon will begin emitting the specified metrics
      with the associated divisors.
    fields:
      - request_id:
          type: u16
          desc: a unique id for the request
      - count:
          type: u8
          desc: |
            The number of metrics that are being configured. A count of
            zero will result in a "success" response that results in no action.
            A special value of 0xFF means all metrics are being configured
            with a divisor of 1 (and the value of `metrics_reporting_divisor`
            is ignored).
      - index_mask:
          type: array
          fill: u64
          size: 4
          desc: |
            An array of four u64 values indicating which metrics are being
            configured.  Only ~245 metrics can be configured per one of these
            messages, each on bit in the mask should correspond to an entry
            in the `reporting_divisor` array, with the first on bit
            corresponding to the first entry of the array.
      - reporting_divisor:
          type: array
          fill: u8
          size: 245
          desc: |
            The number of intervals that must expire before a metric is reported.
            That is, if the reporting interval is 50ms, and the divisor is 2,
            100ms will transpire before the metric is reported. Each enabled
            index in `enable_metrics_indexes` should have a corresponding entry
            in this array. The special value 0 will disable reporting of the
            metric
 - MSG_METRICS_DIVISOR_RESP:
    id: 0x0307
    short_desc: Indicates that the requested metrics have been enabled
    fields:
      - request_id:
          type: u16
          desc: the request id that was completed
      - result:
          type: u8
          desc: |
            A value of zero means the metrics where enabled successfully,
            a non-zero value means an error occurred.
      - message:
          type: array
          fill: u8
          size: 240
          desc: |
            A message relating to the `result` value or nothing
            if the enable request was successful.
 - MSG_METRICS_REPORT:
    id: 0x0308
    short_desc: The actual metrics data.
 
    fields:
      - timestamp:
          type: u64
          desc:
            Nano-second timestamp at which the metrics were collected.
      - index_mask:
          type: array
          fill: u64
          size: 4
          desc: |
            An array of four u64 values indicating which metrics are included
            in the report.  A total of 1024 metrics can be reported currently.
            If one metric report doesn't fit in a single SBP message, multiple
            SBP message will be emitted.
      - values:
          type: array
          fill: u8
          size: 245
          desc: |
            Binary blob of metric data.  Metric values from the blob are
            consumed in increasing order as they appear in the `index_mask`.
            A mask value of 0x10010101 means that metrics with indexes 0
            2, 4 and 7 appear in the report and in that order.  Clients are
            expected to keep a map of metric indexes -> data type width
            in order to correctly parse the values.

 
 
 