macro(manifest)
  if (${CMAKE_PROJECT_NAME} STREQUAL ${PROJECT_NAME})
    set(OUTFLAG WRITE)
  else()
    set(OUTFLAG APPEND)
  endif()
endmacro()
  
macro(headerguard)
  manifest()
  if(TARGET ${ARGV0})
    file(${OUTFLAG} manifest.txt "Not including ${PROJECT_NAME} from ${CMAKE_CURRENT_LIST_DIR}\n")
    # return from the caller context; this is why we need a macro instead of a function
    return()
  else()
    file(${OUTFLAG} manifest.txt "Including ${PROJECT_NAME} from ${CMAKE_CURRENT_LIST_DIR}\n")
  endif()
  message("outflag: ${OUTFLAG}")
endmacro()

macro(swift_add_submodule)
  if (EXISTS ${ARGV0}/CMakeLists.txt)
    add_subdirectory(${ARGV0})
  else()
    find_package(${ARGV0})
  endif()
endmacro()
